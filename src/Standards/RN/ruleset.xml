<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="rn">
<description>
  RN
  First draft created with http://edorian.github.io/php-coding-standard-generator/#phpcs
</description>

<autoload>../../autoloader.php</autoload>

<exclude-pattern>/build/*</exclude-pattern>

<rule ref="Generic.Classes.DuplicateClassName"/>
<rule ref="Generic.CodeAnalysis.EmptyStatement"/>
<rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop"/>
<rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall"/>
<rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
<rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
<rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>
<rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>
<rule ref="Generic.Commenting.Todo"/>
<rule ref="Generic.Commenting.Fixme"/>
<rule ref="Generic.Debug.ClosureLinter"/>

<rule ref="Generic.Debug.JSHint"/>
<rule ref="Generic.Debug.CSSLint"/>
<rule ref="Generic.Files.ByteOrderMark"/>
<rule ref="Generic.Files.LineEndings"/>
<rule ref="Generic.Files.LineLength">
    <properties>
        <property name="lineLimit" value="160"/>
        <property name="absoluteLineLimit" value="220"/>
    </properties>
</rule>

<rule ref="Generic.Formatting.DisallowMultipleStatements"/>
<rule ref="Generic.Formatting.NoSpaceAfterCast"/>
<rule ref="Generic.Functions.CallTimePassByReference"/>
<rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman"/>
<rule ref="Generic.Metrics.CyclomaticComplexity"/>
<rule ref="Generic.Metrics.NestingLevel"/>
<rule ref="Generic.NamingConventions.ConstructorName"/>
<rule ref="Generic.NamingConventions.UpperCaseConstantName"/>

<!--<rule ref="Generic.NamingConventions.CamelCapsFunctionName"/>-->

<rule ref="Generic.PHP.DeprecatedFunctions"/>
<rule ref="Generic.PHP.DisallowShortOpenTag"/>
<rule ref="Generic.PHP.ForbiddenFunctions"/>

<!--<rule ref="Generic.PHP.LowerCaseConstant"/>-->

<rule ref="Generic.PHP.NoSilencedErrors"/>
<rule ref="Generic.WhiteSpace.DisallowTabIndent"/>
<rule ref="Generic.WhiteSpace.ScopeIndent">
    <properties>
        <property name="indent" value="2"/>
    </properties>
</rule>
<rule ref="MySource.PHP.EvalObjectFactory"/>
<rule ref="PEAR.Classes.ClassDeclaration">
    <properties>
        <property name="indent" value="2"/>
    </properties>
</rule>
<rule ref="PEAR.Commenting.InlineComment"/>

<!--<rule ref="PEAR.ControlStructures.MultiLineCondition"/>-->
<rule ref="PEAR.Formatting.MultiLineAssignment"/>
<!--<rule ref="PEAR.Functions.FunctionDeclaration"/> -->
<rule ref="PEAR.Functions.ValidDefaultValue"/>
<rule ref="PEAR.NamingConventions.ValidClassName"/>
<!--<rule ref="PEAR.NamingConventions.ValidFunctionName"/> -->
<!--<rule ref="PEAR.NamingConventions.ValidVariableName"/>-->
<rule ref="PEAR.WhiteSpace.ScopeClosingBrace">
    <properties>
        <property name="indent" value="2"/>
    </properties>
</rule>


<!--<rule ref="PEAR.WhiteSpace.ScopeIndent"/>-->

<rule ref="PSR1.Classes.ClassDeclaration"/>
<rule ref="PSR1.Files.SideEffects"/>
<rule ref="PSR2.Classes.ClassDeclaration"/>
<rule ref="PSR2.ControlStructures.ControlStructureSpacing"/>
<rule ref="PSR2.ControlStructures.ElseIfDeclaration"/>

<!--<rule ref="PSR2.ControlStructures.SwitchDeclaration"/>-->
<rule ref="PSR2.Files.EndFileNewline"/>
<rule ref="PSR2.Namespaces.NamespaceDeclaration"/>
<rule ref="PSR2.Namespaces.UseDeclaration"/>
<rule ref="Squiz.PHP.DisallowMultipleAssignments"/>
<rule ref="Squiz.PHP.DisallowSizeFunctionsInLoops"/>

<rule ref="Squiz.PHP.Eval"/>
<rule ref="Squiz.PHP.ForbiddenFunctions"/>
<rule ref="Squiz.PHP.InnerFunctions"/>
<rule ref="Squiz.PHP.LowercasePHPFunctions"/>
<rule ref="Squiz.PHP.NonExecutableCode"/>
<rule ref="Squiz.Scope.MemberVarScope"/>
<rule ref="Squiz.Scope.MethodScope"/>
<rule ref="Squiz.Scope.StaticThisUsage"/>
<rule ref="Squiz.WhiteSpace.CastSpacing"/>
<rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/>
<rule ref="Squiz.WhiteSpace.SemicolonSpacing"/>
<rule ref="Squiz.WhiteSpace.SuperfluousWhitespace"/>
<rule ref="Zend.Files.ClosingTag"/>


<rule ref="RN.Files.DeclareStrict"/>
<rule ref="RN.Commenting.ConfigurableFileComment">
  <properties>
    <property name="requiredTags" value=""/>
  </properties>
</rule>
<rule ref="RN.Commenting.ConfigurableClassComment">
  <properties>
    <property name="requiredTags" value=""/>
  </properties>
</rule>
<rule ref="RN.Commenting.ConfigurableFunctionComment">
  <properties>
    <property name="minimumVisibility" value="public"/>
  </properties>
</rule>
</ruleset>

